{
    ["drone-sort"] = {
      files = {
        ["master/drone-sort.lua"] = "/share/bios"
      },
      name = "Sorting Drone BIOS",
      description = "This BIOS can be installed on drones to use them in a sorting system employing waypoints.",
      authors = "Sangar",
      repo = "tree/master/drone-sort.lua"
    },
    ["geo2holo"] = {
      files = {
        ["master/geo2holo.lua"] = "/bin"
      },
      name = "Terrain Visualizer",
      description = "Will plot the terrain surrounding the Geolyzer to the Hologram.",
      authors = "Sangar",
      note = "Requires a Geolyzer and a Hologram Projector.",
      repo = "tree/master/geo2holo.lua"
    },
    ["gol"] = {
      files = {
        ["master/gol.lua"] = "/bin",
        ["master/gol-tiny.lua"] = "/bin"
      },
      name = "Conway's Game of Life",
      description = "Simple implementations of the well-known cellular automaton Game of Life.",
      authors = "Sangar",
      note = "The 'tiny' version requires much less RAM, but also runs a lot slower.",
      repo = "tree/master/gol.lua"
    },
    ["holo-demos"] = {
      files = {
        ["master/holo-count.lua"] = "/bin",
        ["master/holo-flow.lua"] = "/bin",
        ["master/holo-text.lua"] = "/bin"
      },
      dependencies = {
        ["libnoise"] = "/"
      },
      name = "Hologram Demos",
      description = "Useful example programs for the Hologram block.",
      authors = "Sangar",
      note = "Requires a Hologram Projector",
      repo = "tree/master"
    },
    ["midi"] = {
      files = {
        ["master/midi.lua"] = "/bin"
      },
      name = "Crappy MIDI Player",
      description = "Can be used to play real MIDI files using either Note Blocks or the built-in speakers.",
      authors = "Sangar",
      note = "The quality very much depends on the MIDI file/type of song.",
      repo = "tree/master/midi.lua"
    },
    ["libnoise"] = {
      files = {
        ["master/noise.lua"] = "/lib"
      },
      name = "Perlin Noise Library",
      description = "This package provides a library for generating Perlin noise, and some utility methods.",
      authors = "Sangar",
      note = "This is a slightly adjusted port from some code originally found on StackOverflow.",
      repo = "tree/master/noise.lua"
    },
    ["librt"] = {
      files = {
        ["master/raytracer.lua"] = "/lib"
      },
      name = "Simple Raytracing Library",
      description = "This package provides a library for performing very basic raytracing.",
      authors = "Sangar",
      note = "Only supports axis aligned bounding boxes.",
      repo = "tree/master/raytracer.lua"
    },
    ["lisp"] = {
      files = {
        ["master/lisp.lua"] = "/bin"
      },
      name = "LuaLisp",
      description = "This program allows running a simple Lisp REPL and Lisp programs.",
      authors = "Sangar",
      note = "Port of https://code.google.com/p/lualisp/ to work in OC, with some minor tweaks.",
      repo = "tree/master/lisp.lua"
    },
    ["print3d"] = {
      files = {
        ["master/print3d.lua"] = "/bin"
      },
      name = "Print3D",
      description = "This program allows sending custom 3D model files to a 3D printer.",
      authors = "Sangar",
      note = "Also install print3d-examples to have some example models.",
      repo = "tree/master/print3d.lua"
    },
    ["print3d-examples"] = {
      files = {
        [":master/models/"] = "/share/models"
      },
      dependencies = {
        ["print3d"] = "/"
      },
      name = "Print3D Examples",
      description = "Contains a couple of example models for the print3d program.",
      authors = "Sangar",
      note = "See the `/usr/share/models` directory for the example models.",
      repo = "tree/master/models"
    },
    ["print3d-view"] = {
      files = {
        ["master/print3d-view.lua"] = "/bin"
      },
      dependencies = {
        ["librt"] = "/"
      },
      name = "3D Print Viewer",
      description = "This program allows previewing 3D model files used for print3d.",
      authors = "Sangar",
      repo = "tree/master/print3d-view.lua"
    },
    ["derp"] = {
      files = {
        ["master/idontexist.lua"] = "/bin"
      },
      name = "Missing File Test",
      description = "Test for OPPM's behavior if files are missing.",
      hidden = true,
      authors = "Sangar",
      repo = "tree/master"
    }
}
